"""
Django settings for multitenant project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-ih8d&x@27p@5r%b+i6mf&$%&+q8%pqy54d&(5=%e(nnobt7m-z"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "*",
]


# Application definition


DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

THIRD_PARTY_APPS = [
    # "rest_framework",
    # # 'storages',
    # "django_hosts",
    # # 'django_filters',
    # "captcha",
    # "debug_toolbar",
    # # 'leaflet',
    # # 'rest_framework_gis',
    # "naomi",
    # "compressor",
    # "cacheops",
]
LOCAL_APPS_TENANT = [
    "blog",
]
LOCAL_APPS_SHARED = [
    "base",
]
LOCAL_APPS = [*LOCAL_APPS_SHARED, *LOCAL_APPS_TENANT]
SHARED_APPS = list(dict.fromkeys(["tenant_schemas", *DJANGO_APPS, *LOCAL_APPS_SHARED]))

TENANT_APPS = [
    *LOCAL_APPS_TENANT,
    "django.contrib.contenttypes",
]


INSTALLED_APPS = list(
    dict.fromkeys(["tenant_schemas", *DJANGO_APPS, *THIRD_PARTY_APPS, *LOCAL_APPS])
)

MIDDLEWARE = [
    "tenant_schemas.middleware.TenantMiddleware",
    # "tenant_schemas.middleware.SuspiciousTenantMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "multitenant.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "multitenant.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "tenant_schemas.postgresql_backend",
        "NAME": "db_tenant",
        "USER": "postgres",
        "PASSWORD": "postgres",
        "HOST": "localhost",
        "PORT": "5432",
        "CHARTSET": "UTF8",
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Tenant
DATABASE_ROUTERS = ("tenant_schemas.routers.TenantSyncRouter",)

TEMPLATE_CONTEXT_PROCESSORS = ("django.template.context_processors.request",)
TENANT_MODEL = "base.Client"  # app.Model
DEFAULT_FILE_STORAGE = 'tenant_schemas.storage.TenantFileSystemStorage'
